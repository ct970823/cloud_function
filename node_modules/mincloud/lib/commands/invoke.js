'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cli = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _utils = require('../utils');

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var formatResult = function formatResult(data) {
  var INDENTATION = '  ';
  var result = [];
  result.push('\u6D4B\u8BD5\u7ED3\u679C\uFF1A' + (data.code ? '失败' : '成功'));
  result.push(INDENTATION + '\u8FD4\u56DE\u7ED3\u679C\uFF1A');
  if (data.code) {
    result.push(INDENTATION + '\u9519\u8BEF\u7C7B\u578B\uFF1A' + data.error.type);
    result.push(INDENTATION + '\u9519\u8BEF\u4FE1\u606F\uFF1A' + data.error.message);
    result.push(INDENTATION + '\u9519\u8BEF\u5806\u6808\uFF1A' + data.error.stack);
  } else {
    if (_typeof(data.data) === 'object') {
      if (Object.keys(data.data).length > 0) {
        JSON.stringify(data.data, null, 2).split('\n').forEach(function (item) {
          result.push('' + INDENTATION + item);
        });
      } else {
        result.push(INDENTATION + '{}');
      }
    } else {
      result.push('' + INDENTATION + data.data);
    }
  }

  var others = '\n\n\u6458\u8981\uFF1A\n  \u4EFB\u52A1 ID\uFF1A' + data.job_id + '\n  \u8FD0\u884C\u65F6\u95F4\uFF1A' + data.execution_time + ' ms\n  \u8BA1\u8D39\u65F6\u95F4\uFF1A' + data.billing_time + ' ms\n  \u5360\u7528\u5185\u5B58\uFF1A' + (0, _utils.formatByte)(data.mem_usage) + '\n\n\u65E5\u5FD7\uFF1A\n  ' + data.log.replace('\n', '\n  ') + '\n';

  return result.join('\n') + others;
};

var cli = exports.cli = (0, _utils.ensureAuth)(function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(engine, functionName) {
    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var response, body;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (functionName) {
              _context.next = 2;
              break;
            }

            throw (0, _utils.usageError)('缺少必填字段 <function_name>', '', '用法：', '    ' + engine.config.get('prefix') + ' invoke <function_name> [data]');

          case 2:
            if (!(typeof data === 'string')) {
              _context.next = 10;
              break;
            }

            _context.prev = 3;

            data = JSON.parse(data);
            _context.next = 10;
            break;

          case 7:
            _context.prev = 7;
            _context.t0 = _context['catch'](3);
            throw (0, _utils.usageError)('data 不是合法的 JSON');

          case 10:
            _context.next = 12;
            return engine.request({
              uri: '/oserve/v1.3/cloud-function/' + functionName + '/debug/',
              method: 'POST',
              json: { function_name: functionName, data: data, sync: true }
            });

          case 12:
            response = _context.sent;
            body = response.body;


            if (engine.config.get('json')) {
              console.log(JSON.stringify(body));
            } else {
              console.log(formatResult(body));
            }

            return _context.abrupt('return', response);

          case 16:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[3, 7]]);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());